{"version":3,"sources":["views/auth/signUp/component/SignUp.js","views/auth/signUp/index.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["SignUpForm","_ref","loginProp","_Yup$object$shape","others","_objectWithoutProperties","_excluded","theme","useTheme","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","checked","setChecked","_useState3","_useState4","showPassword","setShowPassword","_useState5","_useState6","showconfirmPassword","setShowconfirmPassword","_useState7","_useState8","walletAddress","setWalletAddress","_useState9","_useState10","handleConnect","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_window","_window$ethereum","response","_address","wrap","_context","prev","next","window","ethereum","request","method","sent","address","utils","getAddress","type","SNACKBAR_OPEN","open","message","variant","alertSeverity","console","log","stop","apply","arguments","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleMouseDownconfirmPassword","handleClickShowconfirmPassword","useEffect","setWallet","on","accounts","_jsx","_Fragment","children","Formik","enableReinitialize","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","Yup","shape","required","max","matches","_defineProperty","oneOf","onSubmit","_ref3","_callee2","values","_context2","setLoader","signup","_x","_ref4","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_jsxs","_objectSpread","noValidate","InputLabel","sx","color","palette","mode","className","htmlFor","FormControl","typography","customInput","fullWidth","error","Boolean","TextField","placeholder","margin","value","name","onBlur","onChange","inputProps","FormHelperText","id","autoComplete","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","Stack","direction","alignItems","justifyContent","spacing","FormControlLabel","control","Checkbox","target","label","Button","slice","submit","Box","mt","AnimateButton","disableElevation","disabled","SignUp","AuthWrapper1","Grid","container","minHeight","background","Helmet","charSet","rel","item","md","lg","position","alignSelf","display","xs","BackgroundPattern1","AuthCardWrapper","sm","Typography","noWrap","component","marginTop","src","galileoWhite","alt","width","galileo","mb","Divider","Link","to","textDecoration","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AuthWrapper","styled","backgroundColor","other","MainCard","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","concat","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/47.d4571331.chunk.js","sourcesContent":["\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport \"@fontsource/source-sans-pro\";\nimport \"@fontsource/public-sans\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport { ethers, utils } from 'ethers';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack\n} from '@mui/material';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { signup, setLoader } from '../../../../redux/auth/actions';\nimport { useNavigate } from 'react-router-dom';\nimport { setWallet } from 'redux/auth/actions';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport TextField from '@material-ui/core/TextField';\n\nconst SignUpForm = ({ loginProp, ...others }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [checked, setChecked] = useState(true);\n    const [showPassword, setShowPassword] = useState(false);\n    const [showconfirmPassword, setShowconfirmPassword] = useState(false);\n    const [walletAddress, setWalletAddress] = useState('');\n    const [address, setAddress] = useState('');\n\n    const handleConnect = async () => {\n        const response = await window?.ethereum?.request({ method: 'eth_requestAccounts' });\n        if (response) {\n            if (!window.ethereum) {\n                dispatch({\n                    type: SNACKBAR_OPEN,\n                    open: true,\n                    message: 'No crypto wallet found. Please install it.',\n                    variant: 'alert',\n                    alertSeverity: 'info'\n                });\n                console.log('No crypto wallet found. Please install it.');\n                // toast.error('No crypto wallet found. Please install it.');\n            }\n\n            // else if (window?.ethereum?.networkVersion !== '5') {\n            //   console.log('window?.ethereum?.networkVersion !== 5', window?.ethereum?.networkVersion);\n            //     dispatch({\n            //         type: SNACKBAR_OPEN,\n            //         open: true,\n            //         message: 'Please change your Chain ID to Goerli',\n            //         variant: 'alert',\n            //         alertSeverity: 'info'\n            //     });\n            //     console.log('Please change your Chain ID to Goerli');\n            //     setWalletAddress()\n            // }\n            else {\n                const address = utils?.getAddress(response[0]);\n                setWalletAddress(address);\n                dispatch({\n                    type: SNACKBAR_OPEN,\n                    open: true,\n                    message: 'Success',\n                    variant: 'alert',\n                    alertSeverity: 'success'\n                });\n            }\n        } else {\n            console.log('No crypto wallet found. Please install it.');\n            // toast.error('No crypto wallet found. Please install it.');\n        }\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n    const handleMouseDownconfirmPassword = (event) => {\n        event.preventDefault();\n    };\n    const handleClickShowconfirmPassword = () => {\n        setShowconfirmPassword(!showconfirmPassword);\n    };\n\n    useEffect(() => {\n        dispatch(setWallet(walletAddress));\n        handleConnect();\n    }, [walletAddress]);\n\n    if (window.ethereum) {\n        window.ethereum.on('accountsChanged', function (accounts) {\n            // Time to reload your interface with accounts[0]!\n            // setReload(true)\n            handleConnect();\n        });\n    }\n    return (\n        <>\n            <Formik\n                enableReinitialize\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: '',\n                    walletAddress: '',\n                    address: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    firstName: Yup.string().required('First Name is required!').max(42, 'First Name can not exceed 42 characters'),\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\n                    lastName: Yup.string().required('Last Name is required!').max(42, 'Last Name can not exceed 42 characters'),\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\n                    password: Yup.string()\n                        .max(255)\n                        .required('Password is required!')\n                        .matches(\n                            /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                            'Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character'\n                        ),\n                    confirmPassword: Yup.string().max(255).required('Confirm Password is required!'),\n                    confirmPassword: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\n                    address: Yup.string().max(255).required('Delivery address is required!')\n                })}\n                onSubmit={async (values) => {\n                    if (walletAddress == '') {\n                        dispatch({\n                            type: SNACKBAR_OPEN,\n                            open: true,\n                            message: 'Please connect to your wallet',\n                            variant: 'alert',\n                            alertSeverity: 'info'\n                        });\n                    }\n                    await dispatch(setLoader(true));\n                    dispatch(\n                        signup({\n                            firstName: values.firstName,\n                            lastName: values.lastName,\n                            email: values.email,\n                            password: values.password,\n                            walletAddress: walletAddress,\n                            address: values.address,\n                            navigate: navigate\n                        })\n                    );\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\n                            First Name{' '}\n                        </InputLabel>\n                        <FormControl\n                            sx={{ ...theme.typography.customInput }}\n                            className=\"auth-formcontrol\"\n                            fullWidth\n                            error={Boolean(touched.firstName && errors.firstName)}\n                        >\n                            <TextField\n                                placeholder=\"First Name\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                type=\"name\"\n                                value={values.firstName}\n                                name=\"firstName\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.firstName && errors.firstName && (\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\n                                    {errors.firstName}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <InputLabel  sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\n                            Last Name{' '}\n                        </InputLabel>\n                        <FormControl\n                            sx={{ ...theme.typography.customInput }}\n                            className=\"auth-formcontrol\"\n                            fullWidth\n                            error={Boolean(touched.lastName && errors.lastName)}\n                        >\n                            <TextField\n                                placeholder=\"Last Name\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                type=\"lastName\"\n                                value={values.lastName}\n                                name=\"lastName\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.lastName && errors.lastName && (\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\n                                    {errors.lastName}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\n                            Email\n                        </InputLabel>\n                        <FormControl\n                            sx={{ ...theme.typography.customInput }}\n                            className=\"auth-formcontrol\"\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                        >\n                            <TextField\n                                placeholder=\"Email\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-password-login\">\n                            {' '}\n                            Password\n                        </InputLabel>\n                        <FormControl className=\"auth-formcontrol\" fullWidth error={Boolean(touched.password && errors.password)}>\n                            <TextField\n                                placeholder=\" Password\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                type={showPassword ? 'text' : 'password'}\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                            <IconButton\n                                className=\"iconvisible\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                aria-label=\"toggle password visibility\"\n                                edge=\"end\"\n                                size=\"large\"\n                            >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </FormControl>\n\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-password-login\">\n                            Confirm Password\n                        </InputLabel>\n                        <FormControl\n                            className=\"auth-formcontrol\"\n                            fullWidth\n                            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                        >\n                            <TextField\n                                placeholder=\"Confirm Password\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                value={values.confirmPassword}\n                                name=\"confirmPassword\"\n                                type={showconfirmPassword ? 'text' : 'password'}\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n\n                            <IconButton\n                                className=\"iconvisible\"\n                                onClick={handleClickShowconfirmPassword}\n                                onMouseDown={handleMouseDownconfirmPassword}\n                                aria-label=\"toggle password visibility\"\n                                edge=\"end\"\n                                size=\"large\"\n                            >\n                                {showconfirmPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                            {touched.confirmPassword && errors.confirmPassword && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.confirmPassword}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        {/* <div>* Password should be 8 characters long containing 1 Uppercase, 1 Numeric and 1 special character</div> */}\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\n                            Delivery Address\n                        </InputLabel>\n                        <FormControl\n                            sx={{ ...theme.typography.customInput }}\n                            className=\"auth-formcontrol\"\n                            fullWidth\n                            error={Boolean(touched.address && errors.address)}\n                        >\n                            <TextField\n                                placeholder=\"Delivery Address\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                type=\"address\"\n                                value={values.address}\n                                name=\"address\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                // helperText=\"Some important text\"\n                                inputProps={{}}\n                            />\n                            {touched.address && errors.address && (\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\n                                    {errors.address}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"By checking you agree to our Terms and Conditions\"\n                            />\n                        </Stack>\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => {\n                                handleConnect();\n                            }}\n                        >\n                            {walletAddress ? walletAddress.slice(0, 5) + '...' + walletAddress.slice(38, 42) : 'Connect with wallet'}\n                        </Button>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    className=\"signbuttonMarket\"\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default SignUpForm;\n","import { Link } from 'react-router-dom';\nimport '@fontsource/public-sans';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Box } from '@mui/material';\n\nimport galileo from 'assets/images/galileo.png';\nimport galileoWhite from 'assets/images/galileo-white.png';\n// project imports\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\nimport SignUpForm from './component/SignUp';\nimport {Helmet} from \"react-helmet\";\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\n\n// assets\n\n// styles\n\n// ================================|| AUTH1 - LOGIN ||================================ //\n\nconst SignUp = () => {\n    const theme = useTheme();\n\n    return (\n        <AuthWrapper1>\n            <Grid\n                container\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\n            >\n            <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title> Sign Up</title>\n            <link rel=\"canonical\" />\n        </Helmet>\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\n                    <BackgroundPattern1>\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\n                            <Grid item xs={12}>\n                                <span />\n                            </Grid>\n                        </Grid>\n                    </BackgroundPattern1>\n                </Grid>\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\n                    <AuthCardWrapper>\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                        <Box sx={{ display: { xs: 'block', sm:'block', md: 'none', lg:'none' } }}>\n                        <Typography variant=\"h6\" noWrap component=\"div\"\n                         sx={{ marginTop: '5px', }}>\n                            {theme.palette.mode === 'dark' ? (\n                                <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\n                            ) : (\n                                <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\n                            )}\n                        </Typography>\n                    </Box>\n                        </Grid>\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                                <Box sx={{ mb: 2 }}>\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\n                                        Sign Up\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={2} justifyContent=\"center\">\n                            <Grid item xs={12}>\n                                <SignUpForm />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Divider />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                    <Typography component={Link} to=\"/login\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\n                                        Already have an account?\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </AuthCardWrapper>\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default SignUp;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            borderRadius:'4px',\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\n// assets\nimport AuthPattern from 'assets/images/auth-pattern.png';\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\n\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\n\nconst BackgroundPattern1 = ({ children }) => {\n    const theme = useTheme();\n    return (\n        <Box\n            component=\"span\"\n            sx={{\n                display: 'flex',\n                minHeight: '97%',\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\n               \n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'cover',\n                overflow: 'hidden',\n               margin:'10px',\n              \n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\n            }}\n        >\n            {children}\n        </Box>\n    );\n};\n\nBackgroundPattern1.propTypes = {\n    children: PropTypes.node\n};\n\nexport default BackgroundPattern1;\n"],"sourceRoot":""}