{"version":3,"sources":["../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Tour.js","../node_modules/@mui/icons-material/MonetizationOn.js","../node_modules/@mui/icons-material/Description.js","views/pages/user/deliveryDashboard/component/DeliveryDashboard.js","views/pages/user/deliveryDashboard/index.js","ui-component/cards/SubCard.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","createData","name","calories","fat","carbs","protein","DeliveryDashboard","_ref2","productList","theme","useTheme","console","log","_jsx","Grid","item","lg","md","xs","children","container","direction","spacing","gridSpacing","SubCard","className","title","sx","margin","length","map","row","_row$Nft","_row$Nft2","_row$Nft3","_Fragment","_jsxs","justifyContent","textAlign","marginBottom","sm","height","src","Nft","asset","alt","TableContainer","List","component","ListItemButton","ListItemIcon","PersonIcon","fontSize","ListItemText","primary","Typography","variant","ListItemSecondaryAction","color","palette","mode","textTransform","align","type","Divider","TourIcon","status","MonetizationOnIcon","price","currencyType","DescriptionIcon","walletAddress","DeliverD","dispatch","useDispatch","useSelector","state","delivery","user","auth","useEffect","getAllProducts","style","marginTop","maxWidth","background","forwardRef","_ref","ref","content","contentClass","darkTitle","secondary","_ref$sx","_ref$contentSX","contentSX","others","_objectWithoutProperties","_excluded","Card","_objectSpread","border","borderColor","dark","light","boxShadow","CardHeader","p","action","opacity","CardContent","defaultProps"],"mappings":"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","file":"static/js/48.c9f94bb9.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 4H7V2H5v20h2v-8h14l-2-5 2-5zm-6 5c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z\"\n}), 'Tour');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1.41 16.09V20h-2.67v-1.93c-1.71-.36-3.16-1.46-3.27-3.4h1.96c.1 1.05.82 1.87 2.65 1.87 1.96 0 2.4-.98 2.4-1.59 0-.83-.44-1.61-2.67-2.14-2.48-.6-4.18-1.62-4.18-3.67 0-1.72 1.39-2.84 3.11-3.21V4h2.67v1.95c1.86.45 2.79 1.86 2.85 3.39H14.3c-.05-1.11-.64-1.87-2.22-1.87-1.5 0-2.4.68-2.4 1.64 0 .84.65 1.39 2.67 1.91s4.18 1.39 4.18 3.91c-.01 1.83-1.38 2.83-3.12 3.16z\"\n}), 'MonetizationOn');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}), 'Description');\nexports.default = _default;","import PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\n\n// material-ui\nimport {\n    Box,\n    Button,\n    CardContent,\n    Chip,\n    Stack,\n    Divider,\n    Grid,\n    LinearProgress,\n    List,\n    ListItemButton,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Typography\n} from '@mui/material';\n\n// project imports\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport SubCard from 'ui-component/cards/SubCard';\nimport { gridSpacing } from 'store/constant';\nimport PersonIcon from '@mui/icons-material/Person';\nimport TourIcon from '@mui/icons-material/Tour';\nimport ModeIcon from '@mui/icons-material/Mode';\n// assets\nimport { IconEdit } from '@tabler/icons';\nimport TipsAndUpdatesIcon from '@mui/icons-material/TipsAndUpdates';\nimport PinDropTwoToneIcon from '@mui/icons-material/PinDropTwoTone';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport moment from 'moment';\n// progress\nfunction LinearProgressWithLabel({ value, ...other }) {\n    return (\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Box sx={{ width: '100%', mr: 1 }}>\n                <LinearProgress {...other} />\n            </Box>\n            <Box sx={{ minWidth: 35 }}>\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    value: PropTypes.number\n};\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Product Name', ':', 'Watch'),\n    createData('Status', ':', 'status'),\n    createData('Description', ':', ' Delivery Dashboard '),\n    createData('Price', ':', '12345'),\n    createData('Mint Type', ':', '+0 123456789 '),\n    createData('Brand', ':', 'Joker'),\n    createData('Token URL', ':', 'http://example.com')\n];\n\n// ==============================|| DeliveryDashboard ||============================== //\n\nconst DeliveryDashboard = ({ productList }) => {\n    const theme = useTheme();\n    console.log('token' ,  productList)\n    return (\n        <Grid item lg={12} md={12} xs={12}>\n            <Grid container direction=\"column\" spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <SubCard \n                    className='tableShadow'\n                    title=\"Delivery Dashboard\">\n                        <Grid container direction=\"column\" spacing={2}>\n                            <Grid container-fluid spacing={gridSpacing} sx={{ margin: '15px' }}>\n                            {productList?.length > 0 ?(\n                                <Grid item xs={12}>\n                                    {productList?.length > 0 &&\n                                        productList?.map((row) => (\n                                            <>\n                                            <Grid container justifyContent=\"center\" spacing={gridSpacing} \n                                            sx={{ textAlign: 'center', marginBottom:'20px' }}>\n                                                <Grid item md={1} sm={12}></Grid>\n\n                                                        <Grid item md={4} lg={4} className=\"Productdetails\" \n                                                        sx={{ height: 'auto' }}>\n                                                            <SubCard  className='tableShadow'> \n                                                                <img\n                                                                    src={row?.Nft.asset}\n                                                                    alt=\"Statement Image\"\n                                                                    className=\"deliveryimageSize\"\n                                                                />\n                                                            </SubCard>{' '}\n                                                        </Grid>\n\n                                                        <Grid item md={6} sm={12} sx={{ height: 'auto' }}>\n                                                            <SubCard  className='tableShadow'>\n                                                                <TableContainer sx={{}}>\n                                                                    <List component=\"nav\" aria-label=\"main mailbox folders\">\n                                                                        <ListItemButton>\n                                                                            <ListItemIcon>\n                                                                                <PersonIcon sx={{ fontSize: '1.3rem' }} />\n                                                                            </ListItemIcon>\n                                                                            <ListItemText\n                                                                                primary={<Typography variant=\"subtitle1\">Name</Typography>}\n                                                                            />\n                                                                            <ListItemSecondaryAction>\n                                                                                <Typography\n                                                                                    sx={{  color:theme.palette.mode === 'dark' ? '#FFFFFF' : 'black' ,  textTransform: 'capitalize' }}\n                                                                                    variant=\"subtitle1\"\n                                                                                    align=\"right\"\n                                                                                >\n                                                                                    {row?.Nft?.name}\n                                                                                </Typography>\n                                                                            </ListItemSecondaryAction>\n                                                                        </ListItemButton>\n                                                                        <ListItemButton>\n                                                                            <ListItemIcon>\n                                                                                <PersonIcon sx={{ fontSize: '1.3rem' }} />\n                                                                            </ListItemIcon>\n                                                                            <ListItemText\n                                                                                primary={<Typography variant=\"subtitle1\">Type</Typography>}\n                                                                            />\n                                                                            <ListItemSecondaryAction>\n                                                                                <Typography\n                                                                                    sx={{  color:theme.palette.mode === 'dark' ? '#FFFFFF' : 'black' ,  textTransform: 'capitalize' }}\n                                                                                    variant=\"subtitle1\"\n                                                                                    align=\"right\"\n                                                                                >\n                                                                                    {row?.Nft?.type}\n                                                                                </Typography>\n                                                                            </ListItemSecondaryAction>\n                                                                        </ListItemButton>\n                                                               \n                                                                        <Divider />\n                                                                        <ListItemButton>\n                                                                            <ListItemIcon>\n                                                                                <TourIcon sx={{ fontSize: '1.3rem' }} />\n                                                                            </ListItemIcon>\n                                                                            <ListItemText\n                                                                                primary={\n                                                                                    <Typography variant=\"subtitle1\">Status</Typography>\n                                                                                }\n                                                                            />\n                                                                            <ListItemSecondaryAction>\n                                                                                <Typography\n                                                                                    color={\n                                                                                        row?.status == 'Delivered'\n                                                                                            ? 'Green'\n                                                                                            : row?.status == 'pending'\n                                                                                            ? 'Blue'\n                                                                                            : 'Orange'\n                                                                                    }\n                                                                                    variant=\"subtitle1\"\n                                                                                    align=\"right\"\n                                                                                >\n                                                                                    {row?.status}\n                                                                                </Typography>\n                                                                            </ListItemSecondaryAction>\n                                                                        </ListItemButton>\n                                                                        <Divider />\n                                                                        <ListItemButton>\n                                                                            <ListItemIcon>\n                                                                                <MonetizationOnIcon sx={{ fontSize: '1.3rem' }} />\n                                                                            </ListItemIcon>\n                                                                            <ListItemText\n                                                                                primary={<Typography variant=\"subtitle1\">Price</Typography>}\n                                                                            />\n                                                                            <ListItemSecondaryAction>\n                                                                                <Typography\n                                                                                    sx={{ color: 'Orange' }}\n                                                                                    variant=\"subtitle1\"\n                                                                                    align=\"right\"\n                                                                                >\n                                                                                    {row?.Nft.price} {row?.Nft?.currencyType}\n                                                                                </Typography>\n                                                                            </ListItemSecondaryAction>\n                                                                        </ListItemButton>\n                                                                        <Divider />\n                                                                 \n                                                                       <ListItemButton>\n                                                                            <ListItemIcon>\n                                                                                <DescriptionIcon sx={{ fontSize: '1.3rem' }} />\n                                                                            </ListItemIcon>\n                                                                            <ListItemText\n                                                                                primary={\n                                                                                    <Typography variant=\"subtitle1\">Wallet Address</Typography>\n                                                                                }\n                                                                            />\n                                                                            <ListItemSecondaryAction>\n                                                                                <Typography\n                                                                                    sx={{ color: '#9e9e9e', textTransform: 'capitalize' }}\n                                                                                    variant=\"subtitle1\"\n                                                                                    align=\"right\"\n                                                                                >\n                                                                                    {row?.walletAddress}\n                                                                                </Typography>\n                                                                            </ListItemSecondaryAction> \n                                                                        </ListItemButton> \n                                                                        <Divider />\n                                                                 \n                                                                     \n                                                                    </List>\n                                                                </TableContainer>\n                                                            </SubCard>\n                                                        </Grid>\n                                                        <Grid item md={1} sm={12}></Grid>\n                                                    </Grid>\n                                                </>\n                                            ))}\n                                    </Grid>\n                                ) : (\n                                    <Grid item xs={12}>\n                                        <Typography>No data available</Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </SubCard>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\nexport default DeliveryDashboard;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from '@mui/material';\nimport { useTheme } from '@mui/styles';\nimport DeliveryDashboard from './component/DeliveryDashboard';\n\nimport { getAllProducts } from 'redux/deliveryDashboard/actions';\n\nconst DeliverD = () => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const productList = useSelector((state) => state.delivery.productList);\n    const user = useSelector((state) => state.auth.user);\n    useEffect(() => {\n        dispatch(getAllProducts({ walletAddress: user?.walletAddress }));\n    }, []);\n    return (\n        <Grid\n            item\n            md={11}\n            lg={11}\n            xs={12}\n            style={{\n                marginTop: '15px',\n                maxWidth: '90%',\n\n                background: 'tranparent',\n                color: theme.palette.mode === 'dark' ? 'white' : '#404040'\n            }}\n        >\n            <DeliveryDashboard productList={productList} />\n        </Grid>\n    );\n};\n\nexport default DeliverD;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// ==============================|| CUSTOM SUB CARD ||============================== //\n\nconst SubCard = forwardRef(({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\n    const theme = useTheme();\n\n    return (\n        <Card\n            ref={ref}\n            sx={{\n                border: '1px solid',\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light,\n                ':hover': {\n                    boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                },\n                ...sx\n            }}\n            {...others}\n        >\n            {/* card header and action */}\n            {!darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\n            {darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />}\n\n            {/* content & header divider */}\n            {title && (\n                <Divider\n                    sx={{\n                        opacity: 1,\n                        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light\n                    }}\n                />\n            )}\n\n            {/* card content */}\n            {content && (\n                <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\n                    {children}\n                </CardContent>\n            )}\n            {!content && children}\n        </Card>\n    );\n});\n\nSubCard.propTypes = {\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    sx: PropTypes.object,\n    contentSX: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nSubCard.defaultProps = {\n    content: true\n};\n\nexport default SubCard;\n"],"sourceRoot":""}