{"version":3,"sources":["views/auth/login/component/loginForm.js","views/auth/login/index.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["jwt","require","LoginForm","_ref","loginProp","others","_objectWithoutProperties","_excluded","dispatch","useDispatch","navigate","useNavigate","theme","useTheme","_useState","useSelector","state","auth","loader","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","useEffect","setLoader","responseFacebook","data","email","first_name","last_name","axios","post","API_URL","then","response","loginSuccess","profileCompleted","socal","catch","error","toast","message","responseFacebookFailure","_jsx","_Fragment","children","Formik","enableReinitialize","initialValues","password","validationSchema","Yup","shape","max","required","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","login","stop","_x","apply","arguments","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_jsxs","_objectSpread","noValidate","InputLabel","sx","color","palette","mode","className","htmlFor","FormControl","typography","customInput","fullWidth","Boolean","TextField","placeholder","variant","margin","type","value","name","autoComplete","onBlur","onChange","inputProps","FormHelperText","id","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","Stack","direction","alignItems","justifyContent","spacing","Typography","component","Link","to","textDecoration","submit","Box","mt","AnimateButton","Button","disableElevation","disabled","Grid","item","xs","mb","container","fontSize","gridSpacing","lg","md","sm","float","ReactFacebookLogin","appId","fields","callback","onFailure","cssClass","icon","textButton","GoogleLogin","onSuccess","decoded_data","decode","credential","console","log","googleAuthHandle","onError","Login","AuthWrapper1","minHeight","background","Helmet","charSet","position","alignSelf","display","BackgroundPattern1","AuthCardWrapper","noWrap","marginTop","src","galileoWhite","alt","width","galileo","Divider","AuthWrapper","styled","backgroundColor","other","MainCard","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","concat","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/31.d926d8fe.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport TextField from '@material-ui/core/TextField';\nimport \"@fontsource/source-sans-pro\";\nimport \"@fontsource/public-sans\";\nimport {\n    Box,\n    Button,\n    FormControl,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography\n} from '@mui/material';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport '@fontsource/public-sans';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { login, loginSuccess } from '../../../../redux/auth/actions';\nimport { useNavigate } from 'react-router-dom';\nimport { setLoader } from '../../../../redux/auth/actions';\nimport { GoogleLogin } from '@react-oauth/google';\nlet jwt = require('jsonwebtoken');\nimport axios from 'axios';\nimport { gridSpacing } from 'store/constant';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ReactFacebookLogin from 'react-facebook-login';\nimport './loginForm.css';\nimport { API_URL } from 'utils/axios';\nimport FacebookOutlinedIcon from '@mui/icons-material/FacebookOutlined';\n\nconst LoginForm = ({ loginProp, ...others }) => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const theme = useTheme();\n\n    const loader = useSelector((state) => state.auth.loader);\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        dispatch(setLoader(false));\n    }, []);\n\n    const googleAuthHandle = (data) => {\n        const decoded_data = jwt.decode(data.credential);\n        axios\n            .post(API_URL + 'auth/google/callback/success', {\n                data: decoded_data\n            })\n            .then(function (response) {\n                // console.log('response.data.data', response.data.data);\n                dispatch(loginSuccess(response.data.data));\n\n                if (!response.data.data.profileCompleted) {\n                    navigate('/socialLogin', {\n                        state: { socal: response.data.data }\n                    });\n\n                    console.log('if in ran');\n                } else {\n                    // console.log('else in ran');\n                    navigate('/home', {\n                        state: { socal: response.data.data }\n                    });\n                }\n            })\n            .catch(function (error) {\n                toast.error(error.message);\n            });\n    };\n\n    const responseFacebook = (data) => {\n        let { email, first_name, last_name } = data;\n        axios\n            .post(API_URL + 'auth/facebook/callback/success', {\n                data: { email, first_name, last_name }\n            })\n            .then(function (response) {\n                dispatch(loginSuccess(response.data.data));\n\n                if (!response.data.data.profileCompleted) {\n                    navigate('/socialLogin', {\n                        state: { socal: response.data.data }\n                    });\n                } else {\n                    navigate('/home', {\n                        state: { socal: response.data.data }\n                    });\n                }\n            })\n            .catch(function (error) {\n                toast.error(error.message);\n            });\n    };\n    const responseFacebookFailure = (error) => {\n        // toast.error(error);\n    };\n\n    return (\n        <>\n            <Formik\n                enableReinitialize\n                initialValues={{\n                    email: '',\n                    password: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\n                    // .matches(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/, 'Invalid Email'),\n                    // .matches(/^[a-zA-Z0-9]/, '* This email cannot contain white space and special character'),\n\n                    password: Yup.string()\n                        .max(255)\n                        .required('Password is required!')\n                        // .matches(\n                        //     /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                        //     'Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character'\n                        // )\n                })}\n                onSubmit={async (values) => {\n                    await dispatch(setLoader(true));\n                    dispatch(\n                        login({\n                            email: values.email,\n                            password: values.password,\n                            navigate: navigate\n                        })\n                    );\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\n                            Email{' '}\n                        </InputLabel>\n                        <FormControl  sx={{ ...theme.typography.customInput }} className=\"auth-formcontrol\" \n                        fullWidth error={Boolean(touched.email && errors.email)}>\n                            <TextField\n                           \n                                placeholder=\"email\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                autoComplete=\"current-email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-password-login\">\n                            {' '}\n                            Password\n                        </InputLabel>\n                        <FormControl  className=\"auth-formcontrol\" fullWidth error={Boolean(touched.password \n                            && errors.password)}>\n                            <TextField\n                           \n                                placeholder=\" Password\"\n                                className=\"textForm\"\n                                // onChange={(event)=>handelAccount(\"password\",event)}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                type={showPassword ? 'text' : 'password'}\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                            <IconButton\n                                className=\"iconvisible\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                aria-label=\"toggle password visibility\"\n                                edge=\"end\"\n                                size=\"large\"\n                            >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </FormControl>\n\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <Typography\n                                className=\"Forgot\"\n                                variant=\"subtitle1\"\n                                component={Link}\n                                to={'/forgetPassword'}\n                                sx={{\n                                    textDecoration: 'none',\n\n                                    color: theme.palette.mode === 'dark' ? '#fff' : '#000'\n                                }}\n                            >\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                {loader ? (\n                                    <Button\n                                        className=\"signbuttonMarket\"\n                                        disableElevation\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                    >\n                                        Sign in\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        className=\"signbuttonMarket\"\n                                        disableElevation\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                    >\n                                        Sign in\n                                    </Button>\n                                )}\n                            </AnimateButton>\n                        </Box>\n\n                        <Grid item xs={12}>\n                            <Grid mt={2} mb={-2} item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                <Typography className=\"fontfamily\" variant=\"subtitle1\" sx={{ textDecoration: 'none', fontSize: '16px' }}>\n                                    or continue with\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid mt={1} container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6}>\n                                        <Box sx={{ float: { md: 'right', xs: 'right' } }}>\n                                            <ReactFacebookLogin\n                                                appId=\"851727442768362\"\n                                                // autoLoad={true}\n                                                fields=\"first_name, last_name,email\"\n                                                callback={responseFacebook}\n                                                onFailure={responseFacebookFailure}\n                                                cssClass=\"my-facebook-button-class\"\n                                                icon=\"fa-facebook\"\n                                                textButton=\"\"\n                                            />\n                                        </Box>\n                                    </Grid>\n\n                                    <Grid item lg={6} md={6} sm={6} xs={6}>\n                                        <Box sx={{ float: { md: 'left' } }}>\n                                            {' '}\n                                            <GoogleLogin\n                                                type=\"icon\"\n                                                onSuccess={(data) => {\n                                                    // console.log('datafrom google login', data);\n                                                    googleAuthHandle(data);\n                                                }}\n                                                onError={() => {\n                                                    toast.error('Google Auth Failed');\n                                                }}\n                                            />\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default LoginForm;\n","import { Link } from 'react-router-dom';\nimport '@fontsource/public-sans';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Box, Stack, Typography, useMediaQuery } from '@mui/material';\n\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\nimport LoginForm from './component/loginForm';\n\nimport galileo from 'assets/images/galileo.png';\nimport galileoWhite from 'assets/images/galileo-white.png';\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\nimport { Helmet } from 'react-helmet';\nconst Login = () => {\n    const theme = useTheme();\n\n    return (\n        <AuthWrapper1>\n            <Grid\n                container\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\n            >\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title> Sign In </title>\n                </Helmet>\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\n                    <BackgroundPattern1>\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\n                            <Grid item xs={12}>\n                                <span />\n                            </Grid>\n                        </Grid>\n                    </BackgroundPattern1>\n                </Grid>\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\n                    <AuthCardWrapper>\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                                <Box sx={{ display: { xs: 'block', sm: 'block', md: 'none', lg: 'none' } }}>\n                                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{ marginTop: '5px' }}>\n                                        {theme.palette.mode === 'dark' ? (\n                                            <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\n                                        ) : (\n                                            <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\n                                        )}\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                                <Box sx={{ mb: 2 }}>\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\n                                        Sign In\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={2} justifyContent=\"center\">\n                            <Grid item xs={12}>\n                                <LoginForm />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Divider />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                    <Typography\n                                        className=\"fontfamily\"\n                                        component={Link}\n                                        to=\"/signUp\"\n                                        variant=\"subtitle1\"\n                                        sx={{ textDecoration: 'none' }}\n                                    >\n                                        Don&apos;t have an account?\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </AuthCardWrapper>\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            borderRadius:'4px',\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\n// assets\nimport AuthPattern from 'assets/images/auth-pattern.png';\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\n\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\n\nconst BackgroundPattern1 = ({ children }) => {\n    const theme = useTheme();\n    return (\n        <Box\n            component=\"span\"\n            sx={{\n                display: 'flex',\n                minHeight: '97%',\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\n               \n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'cover',\n                overflow: 'hidden',\n               margin:'10px',\n              \n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\n            }}\n        >\n            {children}\n        </Box>\n    );\n};\n\nBackgroundPattern1.propTypes = {\n    children: PropTypes.node\n};\n\nexport default BackgroundPattern1;\n"],"sourceRoot":""}