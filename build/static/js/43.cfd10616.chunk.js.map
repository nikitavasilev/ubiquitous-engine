{"version":3,"sources":["views/auth/resetPassword/ResetPassword.js","views/auth/resetPassword/index.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["ResetPasswordForm","_ref","token","others","_objectWithoutProperties","_excluded","theme","useTheme","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showconfirmPassword","setShowconfirmPassword","handleClickShowPassword","handleClickShowconfirmPassword","handleMouseDownPassword","event","preventDefault","handleMouseDownconfirmPassword","_jsx","_Fragment","children","Formik","initialValues","password","confirmPassword","validationSchema","Yup","shape","max","required","matches","when","is","val","length","then","oneOf","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","console","log","resetPassword","newPassword","stop","_x","apply","arguments","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_jsxs","_objectSpread","noValidate","InputLabel","sx","color","palette","mode","className","htmlFor","FormControl","fullWidth","error","Boolean","TextField","placeholder","variant","margin","name","type","id","autoComplete","onBlur","onChange","inputProps","FormHelperText","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","value","submit","Box","mt","AnimateButton","Button","disableElevation","disabled","ResetPassword","urlSearchParams","useMediaQuery","breakpoints","down","URLSearchParams","window","location","search","params","Object","fromEntries","entries","AuthWrapper1","Grid","container","justifyContent","alignItems","minHeight","background","Helmet","charSet","item","md","lg","position","alignSelf","display","xs","BackgroundPattern1","spacing","AuthCardWrapper","direction","sm","Typography","noWrap","component","marginTop","src","galileoWhite","alt","width","galileo","mb","ResetForm","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AuthWrapper","styled","backgroundColor","other","MainCard","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","concat","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/43.cfd10616.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"@fontsource/source-sans-pro\";\nimport \"@fontsource/public-sans\";\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, OutlinedInput } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from 'redux/auth/actions';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport React from 'react';\n\n// ========================|| FIREBASE - RESET PASSWORD ||======================== //\n\nconst ResetPasswordForm = ({ token, ...others }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [showPassword, setShowPassword] = useState(false);\n    const [showconfirmPassword, setShowconfirmPassword] = useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n    const handleClickShowconfirmPassword = () => {\n        setShowconfirmPassword(!showconfirmPassword);\n    };\n   \n  \n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n    const handleMouseDownconfirmPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    password: '',\n                    confirmPassword: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    password: Yup.string()\n                        .max(255)\n                        .required('Password is required!')\n                        .matches(\n                            /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                            'Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character'\n                        ),\n                    confirmPassword: Yup.string().when('password', {\n                        is: (val) => !!(val && val.length > 0),\n                        then: Yup.string().oneOf([Yup.ref('password')], 'Both Password must be match!')\n                    })\n                })}\n                onSubmit={async (values) => {\n                    console.log('reset', values)\n                    await dispatch(\n                        resetPassword({\n                            newPassword: values.password,\n                            token: token,\n                            navigate: navigate\n                        })\n                    );\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                    <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className='authFont' htmlFor=\"outlined-adornment-password-login\"> Password</InputLabel>\n                    <FormControl\n                  className='auth-formcontrol'\n                    fullWidth\n                    error={Boolean(touched.password && errors.password)}\n                   \n                >\n                        <TextField\n                        placeholder=' Password'\n                            className=\"textForm\"\n                            // onChange={(event)=>handelAccount(\"password\",event)}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                          \n                            type={showPassword ? 'text' : 'password'}\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            \n                            inputProps={{}}\n                        />\n                        {touched.password && errors.password && (\n                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                {errors.password}\n                            </FormHelperText>\n                        )}\n                        <IconButton className='iconvisible'\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        aria-label=\"toggle password visibility\" edge=\"end\" size=\"large\">\n                           \n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                        </FormControl>\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className='authFont' htmlFor=\"outlined-adornment-password-login\">Confirm Password</InputLabel>\n                        <FormControl\n                        className='auth-formcontrol'\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                          \n                        >\n                        \n                        <TextField\n                        placeholder='Confirm Password'\n                        className=\"textForm\"\n                        // onChange={(event)=>handelAccount(\"password\",event)}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        value={values.confirmPassword}\n                                name=\"confirmPassword\"\n                      \n                        type={showconfirmPassword ? 'text' : 'password'}\n                      \n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        \n                        inputProps={{}}\n                    />\n                \n                    <IconButton className='iconvisible'\n                    onClick={handleClickShowconfirmPassword}\n                    onMouseDown={handleMouseDownconfirmPassword}\n                    aria-label=\"toggle password visibility\" edge=\"end\" size=\"large\">\n                       \n                    {showconfirmPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                            {touched.confirmPassword && errors.confirmPassword && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.confirmPassword}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <div>* Password should be 8 characters long containing 1 Uppercase, 1 Numeric and 1 special character</div>\n                        <Box sx={{ mt: 5 }}>\n                            <AnimateButton>\n                                <Button\n                                    className=\"signbuttonMarket\"\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Reset Password\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default ResetPasswordForm;\n","import { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery,Box  } from '@mui/material';\nimport '@fontsource/public-sans';\n\nimport galileo from 'assets/images/galileo.png';\nimport galileoWhite from 'assets/images/galileo-white.png';\n// project imports\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\nimport {Helmet} from \"react-helmet\";\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\nimport AuthSlider from 'ui-component/cards/AuthSlider';\nimport ResetForm from './ResetPassword';\nimport React from 'react';\n// import { FormattedMessage } from 'react-intl';\nconst ResetPassword = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n   \n    return (\n        <AuthWrapper1 >\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ minHeight: '100vh', \n        background: theme.palette.mode === 'dark' ? '#000' : '#fff' , }}>\n        <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>  Reset Password</title>\n     \n    </Helmet>\n            <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', \n            display: { xs: 'none', md: 'block' } }}>\n                <BackgroundPattern1>\n                    <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\n                        <Grid item xs={12}>\n                            <span />\n                            \n                        </Grid>\n                    </Grid>\n                </BackgroundPattern1>\n            </Grid>\n            <Grid item container justifyContent=\"center\" md={6} lg={7} >\n          \n\n                <AuthCardWrapper>\n                <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                <Box sx={{ display: { xs: 'block',sm:'block', md: 'none', lg:'none' } }}>\n                <Typography variant=\"h6\" noWrap component=\"div\"\n                 sx={{ marginTop: '5px', }}>\n                    {theme.palette.mode === 'dark' ? (\n                        <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\n                    ) : (\n                        <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\n                    )}\n                </Typography>\n            </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 4 }}>\n                        <Typography className='signInMarket' variant=\"subtitle1\">\n                            \n                      Reset Password</Typography>\n                    </Box>\n                </Grid>\n            </Grid> \n                    <Grid container spacing={2} justifyContent=\"center\" >\n                        <Grid item xs={12}>\n                            <ResetForm  token={params.token} />\n                        </Grid>\n                      \n                    </Grid>\n                </AuthCardWrapper>\n            </Grid>\n        </Grid>\n    </AuthWrapper1>\n    );\n};\n\nexport default ResetPassword;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            borderRadius:'4px',\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\n// assets\nimport AuthPattern from 'assets/images/auth-pattern.png';\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\n\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\n\nconst BackgroundPattern1 = ({ children }) => {\n    const theme = useTheme();\n    return (\n        <Box\n            component=\"span\"\n            sx={{\n                display: 'flex',\n                minHeight: '97%',\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\n               \n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'cover',\n                overflow: 'hidden',\n               margin:'10px',\n              \n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\n            }}\n        >\n            {children}\n        </Box>\n    );\n};\n\nBackgroundPattern1.propTypes = {\n    children: PropTypes.node\n};\n\nexport default BackgroundPattern1;\n"],"sourceRoot":""}