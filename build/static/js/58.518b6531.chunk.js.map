{"version":3,"sources":["views/pages/brandAdmin/deliveryDashboard/component/changeStatus.js","views/pages/brandAdmin/deliveryDashboard/component/deliveryDashboard.js","views/pages/brandAdmin/deliveryDashboard/index.js","ui-component/extended/Avatar.js","shared/Card/HeadingCard.js"],"names":["Transition","forwardRef","props","ref","_jsx","Slide","_objectSpread","direction","ChangeStatusDialog","_ref","open","setOpen","user","page","limit","search","deliveryId","theme","setDeliveryId","useTheme","_React$useState","React","_React$useState2","_slicedToArray","status","setStatus","dispatch","useDispatch","handleClose","_Fragment","children","_jsxs","Dialog","TransitionComponent","keepMounted","DialogTitle","id","Divider","DialogContent","DialogContentText","Typography","variant","component","Box","sx","minWidth","margin","FormControl","fullWidth","InputLabel","Select","labelId","label","onChange","event","target","value","map","option","MenuItem","DialogActions","pr","Button","color","palette","error","dark","borderColor","onClick","size","changeStatus","brand","BrandId","delivery","DeliveryDashboard","deliveryList","_useState","useState","_useState2","_useState3","_useState4","TableContainer","length","Grid","item","style","padding","fontWeight","mode","justifyContent","Table","TableHead","TableRow","TableCell","align","borderBottom","className","TableBody","undefined","row","index","_row$User","_defineProperty","display","textTransform","lg","Avatar","alt","src","Nft","asset","name","price","currencyType","User","address","Stack","Tooltip","placement","title","fontFamily","fontStyle","endIcon","SendIcon","Delivered","useSelector","state","auth","_useState5","_useState6","_useState7","description","image","_useState8","_useState9","_useState10","_useState11","_useState12","useEffect","getDeliveryDashboard","HeadingCard","MainCard","borderRadius","boxShadow","content","outline","others","_objectWithoutProperties","_excluded","colorSX","background","paper","bgcolor","concat","outlineSX","border","sizeSX","width","spacing","height","MuiAvatar","role","setValue","options","container","alignItems","gridSpacing","marginTop","marginLeft","md","TextField","select","e"],"mappings":"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","file":"static/js/58.518b6531.chunk.js","sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTheme } from '@mui/material/styles';\nimport { Button, Divider, Dialog, DialogActions, DialogContent, DialogTitle, Slide, DialogContentText, Typography } from '@mui/material';\nimport { changeStatus } from 'redux/deliveryDashboard/actions';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\nexport default function ChangeStatusDialog({ open, setOpen, page, limit, search, user, deliveryId, setDeliveryId }) {\n    const theme = useTheme();\n    const [status, setStatus] = React.useState('Delivered');\n\n    const handleChange = (event) => {\n        setStatus(event.target.value);\n    };\n    const dispatch = useDispatch();\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const state = [\n        {\n            value: 'Status',\n            label: 'Status'\n        },\n        {\n            value: 'Delivered',\n            label: 'Delivered'\n        },\n        {\n            value: 'Pending',\n            label: 'Pending'\n        },\n        {\n            value: 'In Process',\n            label: 'In Process'\n        },\n        {\n            value: 'In Transit',\n            label: 'In Transit'\n        }\n    ];\n    return (\n        <>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                // onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title1\"\n                aria-describedby=\"alert-dialog-slide-description1\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title1\">Change Status</DialogTitle>\n                <Divider />\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description1\">\n                        <Typography variant=\"body2\" component=\"span\">\n                            Are you sure you want to change the status?\n                        </Typography>\n\n                        <Box sx={{ minWidth: 120, margin: '20px' }}>\n                            <FormControl fullWidth>\n                                <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"                                \n                                    label=\"Status\"\n                                    onChange={handleChange}\n                                >\n                                    {state.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </DialogContentText>\n                </DialogContent>\n                <Divider />\n                <DialogActions sx={{ pr: 2.5 }}>\n                    <Button\n                        sx={{ color: theme.palette.error.dark,\n                             borderColor: theme.palette.error.dark }}\n                        onClick={handleClose}\n                        color=\"secondary\"\n                    >\n                        No\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        onClick={() => {\n                            dispatch(\n                                changeStatus({\n                                    brand: user.BrandId,\n                                    delivery:deliveryId,\n                                    status: status,\n                                    handleClose: handleClose\n                                })\n                            );\n                        }}\n                    >\n                        Yes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n","import { useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    IconButton,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    Grid,\n    Divider,\n    Typography,\n    TableHead,\n    TableRow,\n    Tooltip,\n    Button,\n    CircularProgress\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ChangeStatusDialog from './changeStatus';\n\nimport Avatar from 'ui-component/extended/Avatar';\nimport moment from 'moment';\n\nconst DeliveryDashboard = ({ deliveryList, user }) => {\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [deliveryId, setDeliveryId] = useState(0);\n    return (\n        <>\n            <ChangeStatusDialog setOpen={setOpen} open={open} user={user} setDeliveryId={setDeliveryId} deliveryId={deliveryId} />\n            <TableContainer>\n                <>\n                    {deliveryList?.length == 0 ? (\n                        <>\n                            <Grid item >\n                                <Typography\n                                    variant=\"h3\"\n                                    style={{ padding: '20px', fontWeight: '800', color: theme.palette.mode === 'light' ? ' #000 ' : '#98A2B2',\n                                     justifyContent: 'center' }}\n                                >\n                                    {' '}\n                                    No Deliveries found.\n                                </Typography>\n                            </Grid>\n                        </>\n                    ) : (\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\" sx={{ borderBottom: 'none' }}></TableCell>\n                                    <TableCell align=\"left \" className=\"Tableheading\" sx={{ borderBottom: 'none' }}>\n                                        Product name{' '}\n                                    </TableCell>\n                                    {/*   <TableCell   className='Tableheading' sx={{borderBottom:'none'}}>Location</TableCell> */}\n                                   {/*  <TableCell className=\"Tableheading\" sx={{ borderBottom: 'none' }}>\n                                        Description\n                                    </TableCell> */}\n\n                                    <TableCell className=\"Tableheading\" sx={{ borderBottom: 'none' }}>\n                                        Price\n                                    </TableCell>\n                                    <TableCell className=\"Tableheading\" sx={{ borderBottom: 'none' }}>\n                                        Status\n                                    </TableCell>\n                                    <TableCell className=\"Tableheading\" sx={{ borderBottom: 'none' }}>\n                                        Address\n                                    </TableCell>\n\n                                    <TableCell className=\"Tableheading\" sx={{ borderBottom: 'none' }}>\n                                        Actions\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n                                {deliveryList != undefined &&\n                                    deliveryList?.map((row, index) => (\n                                        <>\n                                            <TableRow>\n                                                <TableCell align=\"right\" sx={{ borderBottom: 'none' }}></TableCell>\n\n                                                <TableCell\n                                                    sx={{\n                                                        display: 'flex',\n                                                        borderBottom: 'none',\n                                                        textTransform: 'capitalize',\n                                                        borderBottom: 'none'\n                                                    }}\n                                                >\n                                                    <Grid item lg={6}>\n                                                        <Avatar alt=\"Brand Image\" src={row?.Nft.asset} sx={{}} />\n                                                    </Grid>\n                                                    <Grid item lg={6} className=\"tableName\">\n                                                        {row?.Nft.name}\n                                                    </Grid>\n                                                </TableCell>\n\n                                            {/*     <TableCell className=\"tablecell\" sx={{ borderBottom: 'none' }}>\n                                                    {row?.Nft.description}\n                                                </TableCell> */}\n                                                <TableCell\n                                                    className=\"tablecell\"\n                                                    sx={{\n                                                        borderBottom: 'none',\n                                                        color:\n                                                            row?.status == 'Delivered'\n                                                                ? 'Green'\n                                                                : row?.status == 'pending'\n                                                                ? 'Blue'\n                                                                : 'Orange'\n                                                    }}\n                                                >\n                                                    {row?.Nft.price} {row?.Nft.currencyType}\n                                                </TableCell>\n                                                <TableCell\n                                                    className=\"tablecell\"\n                                                    sx={{\n                                                        borderBottom: 'none',\n                                                        color:\n                                                            row?.status == 'Delivered'\n                                                                ? 'Green'\n                                                                : row?.status == 'pending'\n                                                                ? 'Blue'\n                                                                : 'Orange'\n                                                    }}\n                                                >\n                                                    {row?.status}\n                                                </TableCell>\n                                                <TableCell className=\"tablecell\" sx={{ borderBottom: 'none' }}>\n                                                    {row?.User?.address}\n                                                </TableCell>\n                                                <TableCell align=\"left\" sx={{ borderBottom: 'none' }}>\n                                                    <Stack direction=\"row\" justifyContent=\"left\">\n                                                        <Tooltip placement=\"top\" title=\"Status\">\n                                                            <Button\n                                                                variant=\"outlined\"\n                                                                sx={{ fontFamily: 'Poppins', fontStyle: 'normal' }}\n                                                                endIcon={<SendIcon />}\n                                                                onClick={() => {\n                                                                    setOpen(true);\n                                                                    setDeliveryId(row?.id);\n                                                                }}\n                                                            >\n                                                                Status\n                                                            </Button>\n                                                        </Tooltip>\n                                                    </Stack>\n                                                </TableCell>\n                                            </TableRow>\n                                        </>\n                                    ))}\n                            </TableBody>\n                        </Table>\n                    )}\n                </>\n                <Divider />\n            </TableContainer>\n        </>\n    );\n};\n\nexport default DeliveryDashboard;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { gridSpacing } from 'store/constant';\nimport { useTheme } from '@mui/material/styles';\n\nimport { Button, Grid, MenuItem, Menu, Pagination, OutlinedInput, InputAdornment, Typography } from '@mui/material';\nimport { IconSearch } from '@tabler/icons';\nimport { getDeliveryDashboard } from 'redux/deliveryDashboard/actions';\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\nimport DeliveryDashboard from './component/deliveryDashboard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport HeadingCard from 'shared/Card/HeadingCard';\n\nconst Delivered = () => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const deliveryList = useSelector((state) => state.delivery.deliveryList);\n    const user = useSelector((state) => state.auth.user);\n\n    const [search, setSearch] = useState('');\n    const [page, setPage] = useState(1);\n    const [limit, setLimit] = useState(10);\n    const [categoryData, setCategoryData] = useState({\n        id: null,\n        name: '',\n        description: '',\n        image: null\n    });\n    const [addUpdateOpen, setAddUpdateOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleCloseMenu = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        dispatch(\n            getDeliveryDashboard({\n                brand: user.BrandId\n                // search: search,\n                // page: page,\n                // limit: limit\n            })\n        );\n    }, [search, page, limit]);\n\n    return (\n        <>\n            <HeadingCard title=\" Delivery Dashboard\" />\n\n            <MainCard\n            className=\" tableShadow\"\n              sx={{ borderRadius: '5px !important' , boxShadow:'none'}}\n                content={false}\n            >\n                <DeliveryDashboard deliveryList={deliveryList} user={user} />\n\n                <>\n                 {  /*  <Grid item xs={12} sx={{ p: 3 }}>\n                        <Grid container justifyContent=\"center\" spacing={gridSpacing}>\n                            <Grid item>\n                                <Pagination\n                                    color=\"primary\"\n                                    showFirstButton\n                                    showLastButton\n                                    page={page}\n                                    count={1}\n                                    onChange={(event, newPage) => {\n                                        setPage(newPage);\n                                    }}\n                                />\n                            </Grid>\n                           \n                        </Grid>\n                    </Grid> */}\n                </>\n            </MainCard>\n        </>\n    );\n};\n\nexport default Delivered;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport MuiAvatar from '@mui/material/Avatar';\n\n// ==============================|| AVATAR ||============================== //\n\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\n    const theme = useTheme();\n\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\n    const outlineSX = outline && {\n        color: color ? `${color}.main` : `primary.main`,\n        bgcolor: theme.palette.background.paper,\n        border: '2px solid',\n        borderColor: color ? `${color}.main` : `primary.main`\n    };\n    let sizeSX = {};\n    switch (size) {\n        case 'badge':\n            sizeSX = {\n                width: theme.spacing(3.5),\n                height: theme.spacing(3.5)\n            };\n            break;\n        case 'xs':\n            sizeSX = {\n                width: theme.spacing(4.25),\n                height: theme.spacing(4.25)\n            };\n            break;\n        case 'sm':\n            sizeSX = {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            };\n            break;\n        case 'lg':\n            sizeSX = {\n                width: theme.spacing(9),\n                height: theme.spacing(9)\n            };\n            break;\n        case 'xl':\n            sizeSX = {\n                width: theme.spacing(10.25),\n                height: theme.spacing(10.25)\n            };\n            break;\n        case 'md':\n            sizeSX = {\n                width: theme.spacing(7.5),\n                height: theme.spacing(7.5)\n            };\n            break;\n        default:\n            sizeSX = {};\n    }\n\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\n};\n\nAvatar.propTypes = {\n    className: PropTypes.string,\n    color: PropTypes.string,\n    outline: PropTypes.bool,\n    size: PropTypes.string,\n    sx: PropTypes.object\n};\n\nexport default Avatar;\n","import { Box, Card, Grid, MenuItem, TextField, Typography } from '@mui/material';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\n\nimport { forwardRef } from 'react';\nimport { gridSpacing } from 'store/constant';\n\n// constant\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst HeadingCard = forwardRef(({ title, role, value, setValue, options }) => {\n    const theme = useTheme();\n\n    return (\n    \n            <Box sx={{ padding: '13px 20px 22px 20px' }}>\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                    <Grid item>\n                        <Typography variant=\"h1\" component=\"h2\" className='headingcard' \n                        sx={{ marginTop:'10px' ,  \n                        fontWeight: 600, color: '#000' , marginLeft:{lg:'-20px', md:'-20px'} , \n                        background: theme.palette.mode === 'dark' ? 'black' : '#f3f3f3',\n                        color: theme.palette.mode === 'dark' ? 'white' : '#404040', }}>\n                            {title}\n                        </Typography>\n                    </Grid>\n\n                    {value !== undefined && (\n                        <Grid item>\n                            {/* {options && (role == 'teacher' || role == 'super_admin') && ( */}\n                            <TextField\n                                id=\"standard-select-currency\"\n                                select\n                                value={value}\n                                onChange={(e) => setValue(e.target.value)}\n                                sx={{ width: '110px', height: '40px' }}\n                            >\n                                {options.map((option) => (\n                                    <MenuItem key={option.value} value={option.value}>\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                            {/* )} */}\n                        </Grid>\n                    )}\n                </Grid>\n            </Box>\n       \n    );\n});\n\nexport default HeadingCard;\n"],"sourceRoot":""}