{"version":3,"sources":["views/pages/brandAdmin/dashboard/index.js","shared/Card/UserCountCard.js"],"names":["Dashboard","theme","useTheme","dispatch","useDispatch","brandId","useSelector","state","auth","user","BrandId","useEffect","branddashboard","dashboardBrandadmin","branddahboardUser","_jsx","Grid","container","spacing","gridSpacing","children","item","xs","_jsxs","lg","md","sm","UserCountCard","primary","secondary","totalBrandCategories","color","palette","main","totalNfts","redeemNfts","error","soldNfts","success","IconWrapper","styled","position","left","bottom","transform","width","height","opacity","_ref","iconPrimary","IconPrimary","primaryIcon","fontSize","Card","sx","background","CardContent","direction","justifyContent","alignItems","Typography","variant","align"],"mappings":"0GAAA,0EA+DeA,UAtDG,WACd,IAAMC,EAAQC,cACRC,EAAWC,cAEXC,EAAUC,aAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,KAAKC,OAAO,IAE9DC,qBAAU,WACNR,EACIS,YAAe,CACXP,QAASA,IAGjB,GAAG,IACH,IAAMQ,EAAsBP,aAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKM,iBAAiB,IACnF,OACIC,cAACC,IAAI,CAACC,WAAS,EAACC,QAASC,IAAYC,SACjCL,cAACC,IAAI,CAACK,MAAI,EAACC,GAAI,GAAGF,SACdG,eAACP,IAAI,CAACC,WAAS,EAACC,QAASC,IAAYC,SAAA,CACjCL,cAACC,IAAI,CAACK,MAAI,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGJ,GAAI,GAAGF,SACnCL,cAACY,IAAa,CACVC,QAAQ,yBACRC,UAA8B,OAAnBhB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBiB,qBAChCC,MAAO9B,EAAM+B,QAAQJ,QAAQK,SAIrClB,cAACC,IAAI,CAACK,MAAI,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGJ,GAAI,GAAGF,SACnCL,cAACY,IAAa,CACVC,QAAQ,aACRC,UAA8B,OAAnBhB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBqB,UAChCH,MAAO9B,EAAM+B,QAAQH,UAAUI,SAGvClB,cAACC,IAAI,CAACK,MAAI,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGJ,GAAI,GAAGF,SACnCL,cAACY,IAAa,CACVC,QAAQ,oBACRC,UAA8B,OAAnBhB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBsB,WAChCJ,MAAO9B,EAAM+B,QAAQI,MAAMH,SAInClB,cAACC,IAAI,CAACK,MAAI,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGJ,GAAI,GAAGF,SACnCL,cAACY,IAAa,CACVC,QAAQ,kBACRC,UAA8B,OAAnBhB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBwB,SAChCN,MAAO9B,EAAM+B,QAAQM,QAAQL,eAOzD,C,mCC3DA,sDAKMM,EAAcC,YAAO,MAAPA,CAAc,CAC9BC,SAAU,WACVC,KAAM,QACNC,OAAQ,QACRZ,MAAO,OACPa,UAAW,gBACX,SAAU,CACNC,MAAO,QACPC,OAAQ,QACRC,QAAS,UAsCFpB,IAhCO,SAAHqB,GAAoD,IAA9CpB,EAAOoB,EAAPpB,QAASC,EAASmB,EAATnB,UAAWoB,EAAWD,EAAXC,YAAalB,EAAKiB,EAALjB,MAChDmB,EAAcD,EACdE,EAAcF,EAAclC,cAACmC,EAAW,CAACE,SAAS,UAAa,KAErE,OACIrC,cAACsC,IAAI,CAACC,GAAI,CAAEC,WAAYxB,EAAOU,SAAU,WAAYV,MAAO,QAASX,SACjEG,eAACiC,IAAW,CAAApC,SAAA,CACRL,cAACwB,EAAW,CAAAnB,SAAE+B,IACd5B,eAACP,IAAI,CAACC,WAAS,EAACwC,UAAU,SAASC,eAAe,SAASC,WAAW,SAASzC,QAAS,EAAEE,SAAA,CACtFL,cAACC,IAAI,CAACK,MAAI,EAACK,GAAI,GAAGN,SACdL,cAAC6C,IAAU,CAACC,QAAQ,KAAKC,MAAM,SAAS/B,MAAM,UAASX,SAClDS,MAGTd,cAACC,IAAI,CAACK,MAAI,EAACK,GAAI,GAAGN,SACdL,cAAC6C,IAAU,CAACC,QAAQ,QAAQC,MAAM,SAAS/B,MAAM,UAASX,SACrDQ,aAO7B,C","file":"static/js/21.8d723b49.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport UserCountCard from 'shared/Card/UserCountCard';\nimport { Grid } from '@mui/material';\nimport { gridSpacing } from 'store/constant';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { branddashboard } from 'redux/auth/actions';\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n\n    const brandId = useSelector((state) => state.auth.user.BrandId);\n\n    useEffect(() => {\n        dispatch(\n            branddashboard({\n                brandId: brandId\n            })\n            );\n        }, []);\n        const dashboardBrandadmin = useSelector((state) => state.auth.branddahboardUser);\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={3} md={6} sm={6} xs={12}>\n                        <UserCountCard\n                            primary=\"Total Brand Categories\"\n                            secondary={dashboardBrandadmin?.totalBrandCategories}\n                            color={theme.palette.primary.main}\n                        />\n                    </Grid>\n\n                    <Grid item lg={3} md={6} sm={6} xs={12}>\n                        <UserCountCard\n                            primary=\"Total Nfts\"\n                            secondary={dashboardBrandadmin?.totalNfts}\n                            color={theme.palette.secondary.main}\n                        />\n                    </Grid>\n                    <Grid item lg={3} md={6} sm={6} xs={12}>\n                        <UserCountCard\n                            primary=\"Total Redeem Nfts\"\n                            secondary={dashboardBrandadmin?.redeemNfts}\n                            color={theme.palette.error.main}\n                        />\n                    </Grid>\n\n                    <Grid item lg={3} md={6} sm={6} xs={12}>\n                        <UserCountCard\n                            primary=\"Total Sold Nfts\"\n                            secondary={dashboardBrandadmin?.soldNfts}\n                            color={theme.palette.success.main}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled } from '@mui/material/styles';\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\n\n// styles\nconst IconWrapper = styled('div')({\n    position: 'absolute',\n    left: '-17px',\n    bottom: '-27px',\n    color: '#fff',\n    transform: 'rotate(25deg)',\n    '&> svg': {\n        width: '100px',\n        height: '100px',\n        opacity: '0.35'\n    }\n});\n\n// =============================|| USER NUM CARD ||============================= //\n\nconst UserCountCard = ({ primary, secondary, iconPrimary, color }) => {\n    const IconPrimary = iconPrimary;\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\n\n    return (\n        <Card sx={{ background: color, position: 'relative', color: '#fff' }}>\n            <CardContent>\n                <IconWrapper>{primaryIcon}</IconWrapper>\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\n                    <Grid item sm={12}>\n                        <Typography variant=\"h3\" align=\"center\" color=\"inherit\">\n                            {secondary}\n                        </Typography>\n                    </Grid>\n                    <Grid item sm={12}>\n                        <Typography variant=\"body1\" align=\"center\" color=\"inherit\">\n                            {primary}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nUserCountCard.propTypes = {\n    primary: PropTypes.string,\n    secondary: PropTypes.string,\n    iconPrimary: PropTypes.object,\n    color: PropTypes.string\n};\n\nexport default UserCountCard;\n"],"sourceRoot":""}